<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Z-turn | Ant-Veil]]></title>
  <link href="http://www.casparzhang.com/blog/categories/z-turn/atom.xml" rel="self"/>
  <link href="http://www.casparzhang.com/"/>
  <updated>2015-09-06T11:59:11+08:00</updated>
  <id>http://www.casparzhang.com/</id>
  <author>
    <name><![CDATA[Caspar]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Blog 恢复]]></title>
    <link href="http://www.casparzhang.com/blog/2015/05/21/blog-revived/"/>
    <updated>2015-05-21T15:17:37+08:00</updated>
    <id>http://www.casparzhang.com/blog/2015/05/21/blog-revived</id>
    <content type="html"><![CDATA[<p>Blog 已经迁移到了 <a href="http://www.github.com">GitHub</a>，准备恢复更新，主要更新一些内核相关的内容(瞬间变得高大上了有没有~lol)。</p>

<p>且看看我这会儿能坚持多久吧。</p>

<p>对了，坚持用 FeedBurner 订阅的用户，跳出来冒个泡呗…… 估计已经没有多少了吧？</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fix Razer Orochi Re-connect Issue]]></title>
    <link href="http://www.casparzhang.com/blog/2014/10/10/fix-razer-orochi-re-connect-issue/"/>
    <updated>2014-10-10T00:00:00+08:00</updated>
    <id>http://www.casparzhang.com/blog/2014/10/10/fix-razer-orochi-re-connect-issue</id>
    <content type="html"><![CDATA[<h2>Issue</h2>

<p>雷蛇八歧大蛇 2013 版鼠标，短时间内不用自动休眠，系统中蓝牙连接断(预期行为)，鼠标从休眠恢复后系统中的蓝牙连接却无法自动重连，只能将鼠标置为配对模式，通过系统中的蓝牙工具手工连接。</p>

<h2>Environment</h2>

<pre><code>Razer Orochi 蓝牙鼠标
Gentoo + KDE
kernel 3.10 ~ 3.16
bluez 4.101 ~ 5.23
bluedevil 1.3.2 ~ 2.0_rc1
</code></pre>

<h2>Solution</h2>

<!--more-->


<p>通过 <code>hcidump</code> 工具发现：</p>

<pre><code>&gt; HCI Event: Connect Request (0x04) plen 10
    bdaddr F0:65:DD:94:9F:BB class 0x002580 type ACL
&gt; HCI Event: Command Status (0x0f) plen 4
    Accept Connection Request (0x01|0x0009) status 0x00 ncmd 1
&gt; HCI Event: Connect Complete (0x03) plen 11
    status 0x00 handle 13 bdaddr F0:65:DD:94:9F:BB type ACL encrypt 0x00
&gt; HCI Event: Command Status (0x0f) plen 4
    Read Remote Supported Features (0x01|0x001b) status 0x00 ncmd 1
&gt; HCI Event: Read Remote Supported Features (0x0b) plen 11
    status 0x00 handle 13
    Features: 0xbf 0x00 0xa0 0x78 0x18 0x1e 0x59 0x83
&gt; HCI Event: Command Status (0x0f) plen 4
    Read Remote Extended Features (0x01|0x001c) status 0x00 ncmd 1
&gt; HCI Event: Read Remote Extended Features (0x23) plen 13
    status 0x00 handle 13 page 1 max 1
    Features: 0x01 0x00 0x00 0x00 0x00 0x00 0x00 0x00
&gt; HCI Event: Command Status (0x0f) plen 4
    Remote Name Request (0x01|0x0019) status 0x00 ncmd 1
&gt; HCI Event: Remote Name Req Complete (0x07) plen 255
    status 0x00 bdaddr F0:65:DD:94:9F:BB name 'Razer Orochi 2013'
&gt; HCI Event: Command Complete (0x0e) plen 10
    Link Key Request Negative Reply (0x01|0x000c) ncmd 1
    status 0x00 bdaddr F0:65:DD:94:9F:BB
&gt; HCI Event: Disconn Complete (0x05) plen 4
    status 0x00 handle 13 reason 0x13
    Reason: Remote User Terminated Connection
</code></pre>

<p>出现 <strong><em>Link Key Request Negative Reply</em></strong> 的字样，怀疑是配对的时候使用自动 key，而蓝牙工具没有保存这个自动 key，导致鼠标从休眠恢复时试图以空 key 连接，从而失败。</p>

<p>知道了问题，解决方法就简单了，配对的时候手工输入 key/PIN 为 <strong><em>1234</em></strong>，连接即可。</p>

<p>就这么一个破问题，折腾了我半天时间，内核、bluez、bluedevil 都尝试了一遍，还在人家的 Macbook 上测试了一番。差点就冲动下单换 Mac 了。 <code>#我不是土豪#</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gentoo KDE 下折腾 OpenConnect]]></title>
    <link href="http://www.casparzhang.com/blog/2014/03/21/configure-openconnect-in-gentoo-kde/"/>
    <updated>2014-03-21T00:00:00+08:00</updated>
    <id>http://www.casparzhang.com/blog/2014/03/21/configure-openconnect-in-gentoo-kde</id>
    <content type="html"><![CDATA[<p>最近呢，推上某奸商推出了 AnyConnect 套餐，这对广大翻墙群众来说绝对是个利好消息啊，可以自动配路由的东东。我毫不犹豫去把自己的绝版廉价套餐换成了 100 元的套餐，然后开始折腾 AnyConnect 配置。</p>

<p>iOS 上配置十分简单，找到 Cisco AnyConnect 这个 App 就搞定。Linux 下要把它配置得很舒服，着实花了一番功夫。</p>

<p>公司 VPN 用的也是 AnyConnect，我就继续用着公司的客户端(Cisco AnyConnect Secure Mobility Client), 直到今天早上我修复了笔记本上的无线网，机器有了两个 IP 为止。有了两个 IP 的 AnyConnect service 居然 segfault 了，看了一下 debug 信息，我觉得对这种闭源工具我还是别折腾了。直接换开源方案 OpenConnect.</p>

<p>Portage 里搜了一下，openconnect 有两个包，networkmanager-openconnect 有 libkeyring-gnome 依赖，我现在是个有洁癖的 KDE 党，果断不能装啊，于是用第二个， openconnect 命令行版…… 不行，不能这么罗里八嗦，反正最后折腾结果如下：</p>

<!--more-->


<ol>
<li>只用命令行的话，Portage 里的 <strong><em>openconnect-5.99*</em></strong> 版本可用，配好 <code>/etc/conf.d/openconnect</code> 就可以了；</li>
<li>需要配合 KDE plasma 插件 <strong><em>networkmanagement</em></strong> (0.9+版本) 的话，就必须得装 <strong>NetworkManager-openconnect</strong> 了。事实证明，<strong>libkeyring-gnome</strong> 依赖是可以去掉的。我修改了 Portage 文件，放到我<a href="https://github.com/casparant/caspar-gentoo/tree/master/net-misc/networkmanager-openconnect">自己的 Overlay</a> 里了。</li>
<li><del datetime="2014-03-21T09:54:44+00:00">另外 <strong><em>openconnect-5.99*</em></strong> 版本会导致 <strong><em>networkmanagement</em></strong> 带了 <code>openconnect</code> flag 之后编译失败，只能回退到 5.03 版本。</del> <strong><em>networkmanagement</em></strong> 已经 deprecated 了，用 <strong><em>plasma-nm</em></strong> 代替，最新版本没有编译问题。</li>
<li><del datetime="2014-03-21T09:54:44+00:00"><strong><em>openconnect-5.03</em></strong> 版本也是有问题的，<code>openconnect</code> 命令执行后，如果从终端输入密码，需要先按一个回车，再输入一遍。所以配置文件中的 <code>tmp_SERVER &lt;&lt;-E</code> 后面需要加一个空行，否则 daemon 永远启动失败，因为接收不到密码。</del> 换了最新的 <strong><em>openconnect-5.99</em></strong> 之后，没问题了。</li>
</ol>


<p>就这些。配好之后，既可以用 NM 的 GUI 连，也可以起服务连。从此过上了永不断网（某奸商广告语）的生活～</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WizNote: 终于找到比较干净的 Qt 的笔记软件]]></title>
    <link href="http://www.casparzhang.com/blog/2014/03/11/an-introduction-of-wiz-note/"/>
    <updated>2014-03-11T00:00:00+08:00</updated>
    <id>http://www.casparzhang.com/blog/2014/03/11/an-introduction-of-wiz-note</id>
    <content type="html"><![CDATA[<p>Linux 上记笔记，向来很纠结。以前用过一段时间 <a href="http://zim-wiki.org/index.html">Zim</a>，后来变成了 KDE 党，只好果断抛弃了。找到 <a href="http://basket.kde.org/">BasKet</a>，功能还是很强大的，可是格式一团糟。无法以 Plain Text 存储文字，拷贝来拷贝去的时候经常格式混乱。也尝试在 Web 端存东西，结果还是发现不习惯，而且离线无法访问。</p>

<p>然后今天工作的时候有同事提到客户报告鄙厂<a href="http://www.aliyun.com/">产品</a>的问题，碰到了故障（当然在内核组大牛们的努力下该问题已经解决了），我就好奇去看了一下报告者信息，然后就发现了这个笔记软件：<a href="http://wiz.cn/index.html">Wiz</a>. 看起来还挺 Geek 的，有手机端有 Linux 端有 Mac 端。于是去 gentoo-zh 的 Overlay 找了一圈（是的，5 年过去了我还在 Gentoo 的不归路上慢慢走着），<a href="https://github.com/microcai/gentoo-zh/blob/master/app-text/wiznote/wiznote-2.0.64.ebuild">找到了</a>。</p>

<p>看起来样子还不错，还比较清爽，也可以格式化为 Plain Text。功能上比 BasKet 少一些，但是用着还是挺舒服的。</p>

<p>最不能忍受的问题是没有任务栏图标，于是接着搜。</p>

<p>找到了一年前某人的一个没有 Merge 的 <a href="https://github.com/WizTeam/WizQTClient/pull/80">Pull Request</a>，然后稍微修改了一下补丁，打到源代码里，发现可以用了。</p>

<p>修改后的 ebuild 请<a href="https://github.com/casparant/caspar-gentoo/blob/master/app-text/wiznote/wiznote-2.1.0_beta.ebuild">猛戳</a>。</p>

<p>最后，有更靠谱的笔记软件请推荐。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Resolved: 如何更新 Git 补丁]]></title>
    <link href="http://www.casparzhang.com/blog/2012/01/03/how-to-update-your-git-patches/"/>
    <updated>2012-01-03T00:00:00+08:00</updated>
    <id>http://www.casparzhang.com/blog/2012/01/03/how-to-update-your-git-patches</id>
    <content type="html"><![CDATA[<p>使用 git 制作补丁时，经常发现补丁需要修改。如果只是最后一次 commit 需要修改，那就好办，用下面的方法就可以搞定：</p>

<pre><code class="bash">git reset HEAD^
# edit edit edit
git commit -a -s -c ORIG_HEAD
git format-patch --subject-prefix="PATCH v2"
</code></pre>

<p>但是如果是一系列补丁中的中间几个补丁需要修改，该怎么办呢？</p>

<p><del datetime="2012-01-03T16:12:57+00:00">笨办法已经被删掉>.&lt;</del></p>

<!--more-->


<p><strong>Update 1:</strong> 非常感谢 wangcong 的指点！<code>git rebase -i</code> 可以出色地完成这个任务，方法在 man-page 里面有详述，见 <strong><em>INTERACTIVE MODE</em></strong> 和 <strong><em>SPLITTING COMMITS</em></strong> 部分。</p>

<p>假设当前所在分支名为 <strong>topic</strong> ，做了 3 个补丁，打算提交给邮件列表的时候发现中间一个补丁需要更新，此时使用下列命令：</p>

<pre><code class="bash">git rebase -i HEAD~4
</code></pre>

<p>出现编辑窗口如下：</p>

<pre><code>pick 21732a8 mm/swapping01: new testcase
pick c3751d1 hugemmap01: clean-up format
pick d75449c mm/swapping01: change sleep time to 5 sec
</code></pre>

<p>此时需要修改 <code>commit c3751d1</code>，则把 <code>pick</code> 改为 <code>edit</code> 即可。保存退出后 git 会 rebase 到需要修改的 commit 处停止，此时可以直接修改内容，然后执行：</p>

<pre><code class="bash">git add xxx # mark as resolved
git commit --amend
</code></pre>

<p>或者</p>

<pre><code>git reset --soft HEAD^
#edit edit edit
git commit -a -s -c ORIG_HEAD
</code></pre>

<p>之后执行 <code>git rebase --continue</code> 即可。</p>

<p>突然想起来一年前就请教过 wangcong 这个问题，只不过当时对 <code>git rebase</code> 完全不了解，后来就忘了，惭愧 -_-|||。</p>

<p><strong>Update 2</strong>: 同样感谢 Iven 的指点，可以去看看他的文章: <a href="http://www.kissuki.com/?p=135">http://www.kissuki.com/?p=135</a></p>
]]></content>
  </entry>
  
</feed>
