<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Hacks | Ant-Veil]]></title>
  <link href="http://casparant.github.io/blog/categories/hacks/atom.xml" rel="self"/>
  <link href="http://casparant.github.io/"/>
  <updated>2015-05-21T11:59:03+08:00</updated>
  <id>http://casparant.github.io/</id>
  <author>
    <name><![CDATA[Caspar]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[让gnome-power-manager使用notify-osd通知]]></title>
    <link href="http://casparant.github.io/blog/2009/08/29/make-gpm-use-notify-osd/"/>
    <updated>2009-08-29T00:00:00+08:00</updated>
    <id>http://casparant.github.io/blog/2009/08/29/make-gpm-use-notify-osd</id>
    <content type="html"><![CDATA[<p>感谢<a href="http://imtx.cn" target="new">Tualatrix</a>同学对Notify-OSD, pidgin-libnotify, notification-daemon等包的hack，让我用上了Ubuntu下的Notify-OSD特性。不过因为笔记本经常要拔电源，这gnome-power-manager的事件通知还不能使用notify-osd，一拔电源就跳出窗口让人不爽，上网搜索，终于找到了解决方案。</p>




<p>在AUR里面找到了这个: <a href="http://aur.archlinux.org/packages.php?ID=24699" target="new">http://aur.archlinux.org/packages.php?ID=24699</a>, 里面包含了notify-osd的补丁。可惜这是for 2.24的gpm的，直接patch会报错。我把它下载下来，修改了一下，让它能用在2.26.4的gpm上。修改后的patch可以从我在github上的overlay里下到：<a href="http://github.com/casparant/caspar-gentoo/tree/master" target="new">http://github.com/casparant/caspar-gentoo/tree/master</a>。</p>




<p>现在gpm已经正常使用notify-osd了。至少拔除电源的时候能正确通知，不知道其他情况下如何。</p>




<p><img src="http://img.ant.im/di-7718.png" /></p>




<p>补充一个网址<a href="https://wiki.ubuntu.com/NotifyOSD" target="new">https://wiki.ubuntu.com/NotifyOSD</a>，看来Notify-OSD接管所有桌面通知任重而道远啊~</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[又对awn-applet的通知栏图标hack了一下]]></title>
    <link href="http://casparant.github.io/blog/2008/09/04/a-recently-hack-of-notification-area-in-awn-applet/"/>
    <updated>2008-09-04T00:00:00+08:00</updated>
    <id>http://casparant.github.io/blog/2008/09/04/a-recently-hack-of-notification-area-in-awn-applet</id>
    <content type="html"><![CDATA[<p>曾经写过一篇文章《<a href="http://www.casparant.com/a-hack-of-notification-area-in-awn-applet.html">对awn-applet的notification area的一个小改动</a>》，目的是为了避免高像素图标将notification area这个applet的高度撑破，经过修改，确实能将每个图标的像素给固定住，使得applet保持原大小。今天通过重新解读代码，发现原来的修改步骤并不那么完美，事实上只需要修改一条语句即可，仍旧是在applet.c这个源文件中，看到如下代码：</p>




<p><pre lang="cpp" line="1">static void
tray_icon_added (EggTrayManager *manager,
                 GtkWidget      *icon,
                 TrayApplet     *applet)
{
  //gtk_widget_set_size_request (GTK_WIDGET (icon), 24, 24);
  g_object_set_qdata (G_OBJECT (icon), new_quark, GINT_TO_POINTER (1));
  g_object_set_qdata (G_OBJECT (icon), del_quark, GINT_TO_POINTER (0));</pre></p>




<p>  applet->icons = g_list_append (applet->icons, icon);<br />
  gtk_widget_set_size_request (icon, icon_size, icon_size);<br />
  tray_applet_refresh (applet);<br />
}</p>




<p><!--more-->其中的11行的<code>gtk_widget_set_size_request</code>函数，在<gtk/gtkwidgets.h>中有声明，含义为为第一个参数指定的widget请求大小，第二个参数为width，第三个参数为height。经过添加printf监听变量，发现除了awn启动后icon_size为原先指定好的24，此后一直就变为-1(其意义为不约束图标大小，使用原大小)。而图标通常都是尽可能使用高像素图标的，所以会造成撑破applet高度的现象。</p>




<p>因此不用我以前那么麻烦的修改，只需要在第11行上将后一个icon_size指定好大小即可。</p>




<p>但是有些细节还是不尽完美。比如grnotify这个软件在notification area上的高宽比不是1:1，图标右侧有未读订阅数显示，效果如下图：</p>




<p><img src="http://img.ant.im/di-6QO8.png" /></p>




<p>而经过我修改的新applet中，grnotify这个软件的高宽比变成是1:1，也就是它图标右侧的未读订阅数不能显示，如下图：</p>




<p><img src="http://img.ant.im/di-389Y.png" /></p>




<p>我是个偏向完美主义的人，自然要继续修改代码。</p>




<p>弄了半天之后发现，原来将第11行代码上的24改成22就可以了。因为以前修改过pidgin的图标，知道trayicon一般有三种分辨率：18x18,22x22,48x48。为什么修改成22就可以显示真实的宽高比了呢？估计和图标的显示机制有关。</p>




<p>不猜了，反正我现在用着正常就好，嗯。
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[对awn-applet在通知栏的一个小改动]]></title>
    <link href="http://casparant.github.io/blog/2008/07/04/a-hack-of-notification-area-in-awn-applet/"/>
    <updated>2008-07-04T00:00:00+08:00</updated>
    <id>http://casparant.github.io/blog/2008/07/04/a-hack-of-notification-area-in-awn-applet</id>
    <content type="html"><![CDATA[<p>话说，用了awn-extra-applet之后，腰不疼了，腿不酸了，吃饭也香了，身体也有劲儿了……</p>




<p>不过有点不爽的就是，awn applets里面的notification area(用来代替panel上的notification area的东东)显示图标有问题。当某程序的status icon使用的是高像素图标(比如128x128)时，整个notification area就被撑满了，高度也撑破了。</p>




<p>如下图：</p>




<p><img src="http://img.ant.im/di-0CWK.png" /></p>




<p>于是好好的一个awn的美观就被破坏殆尽。</p>




<p>最近对代码有点犯怵，不过还是去看了看notification area的代码，发现只有三个文件。</p>




<p>在applet.c中，找到这么一段代码：</p>




<p><!--more--><pre lang="cpp" line="1">
height = awn_applet_get_height (applet);
gtk_widget_set_size_request (GTK_WIDGET (applet), -1, height* 2 );
 
table = gtk_table_new (1, 1, FALSE);
app->table = table;
gtk_table_set_col_spacings (GTK_TABLE (table), 2);
gtk_table_set_row_spacings (GTK_TABLE (table), 1);
</pre></p>




<p>第一行说明notification area中显示的图标高度是由applet的实际高度决定的。applet的实际高度可以很高，比如128的那个更新图标之类的。</p>




<p>于是修改起来也很简单，把第一行注释掉，再在开头height声明时初始化为24即可。</p>




<p>声明部分：
<pre lang="cpp" line="1">
static GQuark new_quark = 0;
static GQuark del_quark = 0;
static gint   n_rows    = 0;
static int   height    = 24;  //原来这里是0
static int   icon_size = 24;
</pre></p>




<p>改完后重新编译，重新使用awn后，图标果然正常了。</p>




<p><img src="http://img.ant.im/di-MBQJ.png" /></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[改进/倒退了的Quoter]]></title>
    <link href="http://casparant.github.io/blog/2008/04/01/modified-quoter/"/>
    <updated>2008-04-01T00:00:00+08:00</updated>
    <id>http://casparant.github.io/blog/2008/04/01/modified-quoter</id>
    <content type="html"><![CDATA[<p>今天看着Sexy-Comments不能让访客Quote留言很不爽，就决定把Quoter请回来。不过以前看到Quote[quote]<br />
[/quote]，和原生引用&lt;blockquote&gt;&lt;/blockquote&gt;的兼容性很差，决定将其改一下。<br />
开始动手——</p>




<p>改进如下：
<blockquote>去掉了自动引用最后一条留言</blockquote></p>




<p>将[quote][/quote]改为&lt;blockquote&gt;&lt;/blockquote&gt;
可以<a href="http://docs.google.com/leaf?id=0B-GDvj9JsmanODkyNjFlZTAtZWFmNS00M2Y0LWFiMmYtNmI2MjI5MjZjY2I0&hl=zh_CN">点此下载</a>我修改了的包。</p>




<p>插件原下载页：</p>




<p><a href="http://www.damagedgoods.it/wp-plugins/quoter/">http://www.damagedgoods.it/wp-plugins/quoter/</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux下飞鸽传书的两个问题的解决]]></title>
    <link href="http://casparant.github.io/blog/2008/03/12/ipmsg-problems/"/>
    <updated>2008-03-12T00:00:00+08:00</updated>
    <id>http://casparant.github.io/blog/2008/03/12/ipmsg-problems</id>
    <content type="html"><![CDATA[<p>—————————— 02.27问题 显示乱码的解决 ——————————</p>




<p>前不久<a href="http://www.ipmsg.org/index.html.en" target="_blank">飞鸽</a>的GNOME2版本更新到了0.9.5，编译后却发现中文的用户名不能显示了。</p>




<p>参考了此页<a href="http://www.linuxidc.com/Linux/2007-06/4804.htm" target="_blank">http://www.linuxidc.com/Linux/2007-06/4804.htm</a></p>




<p>修改后发现没用。仔细看了下codeset.c文件的代码，发现应该这么修改</p>




<p>到源码文件夹下，src文件夹下，codeset.c文件，找到
<blockquote><code>#define IPMSG_INTERNAL_CODE "UTF-8"<br />
#define IPMSG_PROTO_CODE    IPMSG_INTERNAL_CODE</code></blockquote>
<!--more-->将下面一行改为
<blockquote><code>#define IPMSG_PROTO_CODE    "GBK"</code></blockquote>
保存后编译安装。</p>




<p>成功显示中文。</p>




<p>然而在同学的机器上不修改源代码也能正确显示中文。联想到前几天checkgmail的乱码问题，还有时不时发生的不能输入中文的问题（就是启动后，在任何可以输入文字的地方输入中文，显示的是一堆乱码），觉得这应该和系统有关，而不是一个普遍现象。</p>




<p>看来只能针对自己的机器问题自己分析了。</p>




<p>—————————— <strong>03.12更新，关于启动时出现core dump的问题的解决 </strong>——————————</p>




<p>今天再次编译了g2ipmsg0.9.5，结果启动后没反应。到终端下运行发现只有一条core dump命令。</p>




<p>上网搜索无果。</p>




<p>于是漫无目的地在编译输出里寻找，果真找到了：</p>




<p>./configure之后的结果如下——
<blockquote><code>...<br />
checking for GST... no<br />
configure: WARNING: You need GStreamer-0.10 or later installed if you need sound relevant functions<br />
configure: creating ./config.status<br />
config.status: creating Makefile<br />
config.status: creating src/Makefile<br />
config.status: creating po/Makefile.in<br />
...
</code></blockquote>
突然想起来GTK2的飞鸽启动后会有音乐，看来是因为这个的原因。</p>




<p>找到了问题，还有什么好说的呢，
<blockquote>sudo apt-get install gstreamer0.10-*</blockquote>
———————————— <strong>08.01更新 关于core dump的新问题</strong> ————————————</p>




<p>有时候装了gstreamer也会core dump，有个偏方可以试试：用sudo执行飞鸽，然后重启，正常执行。</p>

]]></content>
  </entry>
  
</feed>
