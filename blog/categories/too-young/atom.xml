<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Too Young | Ant-Veil]]></title>
  <link href="http://www.casparzhang.com/blog/categories/too-young/atom.xml" rel="self"/>
  <link href="http://www.casparzhang.com/"/>
  <updated>2015-05-22T16:58:26+08:00</updated>
  <id>http://www.casparzhang.com/</id>
  <author>
    <name><![CDATA[Caspar]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[CM7.1 on DEFY]]></title>
    <link href="http://www.casparzhang.com/blog/2011/10/12/cm7-1-on-defy/"/>
    <updated>2011-10-12T00:00:00+08:00</updated>
    <id>http://www.casparzhang.com/blog/2011/10/12/cm7-1-on-defy</id>
    <content type="html"><![CDATA[<p>CyanogenMod, the community Android mod, is officially <a href="http://www.cyanogenmod.com/blog/cyanogenmod-7-1-released" target="_blank">supporting Motorlora Defy</a> in the latest release CM7.1. Now the system seems running well on my device.</p>




<p>Why I want CM7.1 on my machine:</p>




<p><ul>
    <li>try something new</li>
    <li>I need openvpn</li>
    <li>2.3.4 ROM for ME525+ not working well on my device :-(</li>
</ul></p>




<p>I followed most of the instructions from <a href="http://forum.cyanogenmod.com/topic/32469-cyanogenmod-7-for-the-motorola-defy-v710-9-oct-2011/" target="_blank">the post in CM forum</a>, except that I didn't install gapps-gb-20110828. For some reason, <em>Android Market</em> from 20110828 package continously got crashed once I opened the application. I tried with <a href="http://goo-inside.me/gapps/gapps-gb-20110613-signed.zip" target="_blank">gapps-gb-20110613</a> and <em>Android Market</em> worked as normal, so I recommend using this version of gapps if you ever encountered similar issue like me.</p>




<p><!--more-->Well... Some extra jibber-jabbers about <em>Android Market</em>:</p>




<p>Region restriction sucks... It prevents me from buying Touchdown license from market...</p>




<p>I do hate <a href="http://twidroyd.com/" target="_blank">some</a> apps changing their names so frequently and deprecating the old version in market. I PAID for the old one, and I still need to pay for the new one!</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在 Red Hat 两年]]></title>
    <link href="http://www.casparzhang.com/blog/2011/07/16/beginning-of-my-third-year-in-red-hat/"/>
    <updated>2011-07-16T00:00:00+08:00</updated>
    <id>http://www.casparzhang.com/blog/2011/07/16/beginning-of-my-third-year-in-red-hat</id>
    <content type="html"><![CDATA[<p>已经进入我在 Red Hat 的第三年了，看到两年来这贫瘠无比的博客，决定把阶段总结发到这里来，挽回一下我那正在疯狂下滑的订阅数，嗯。回头看了一下以前的日志，去年这个时候竟然没有写总结，干脆两年的一起写好了。行文照旧会比较混乱，请将就将就。</p>




<p>刚以实习生身份进入 Red Hat 时，主要工作就是验 Bug。记得当时很多 Bug 的描述都很不清晰，往往一个 Bug 就浪费一两天时间去分析。有的 Bug 还不能用脚本重现，只能物理接触硬件。有一次在机房里呆了一个下午，要用针头去戳机器上的一个小孔[<a href="http://en.wikipedia.org/wiki/Non-maskable_interrupt" target="_blank">1</a>]，戳了我整整一个下午。类似的折腾人的 Bug 仿佛是永远都不会消失，现在我还在跟他们打交道。</p>




<p>一个月后，老板让我了解一个测试套件<a href="http://ltp.sourceforge.net/" target="_blank">LTP</a>，之前是他一直在维护这个工具在内部测试平台上的正常运行，交给我之后他基本上就没再怎么管过它了（直到最近，他开始往 LTP 提交内存相关的测试代码，这是后话了）。我当时的基本工作就是定期把 LTP 的稳定发布版本移植回内部测试平台，然后如果运行出错，根据运行情况如果是 LTP 的问题，就写一些补丁来修复 LTP 运行时出现的错误。从此我才正式结束和开源项目社区浅尝辄止的试水活动，开始深入社区贡献代码。为 LTP 编写补丁对我的帮助很大，一方面跟编写补丁相关的工具，比如说 git，都熟练掌握了；另一方面通过熟悉 LTP 的测试代码，了解了很多从用户空间测试内核功能的方法；而且我也学会了怎么在邮件列表里面跟开发者吵架:)</p>




<p><!--more-->随后的几个月里，基本上就是继续了解一些公司内部的测试工具，同时照旧维护 LTP，验 Bug，写自动化测试脚本，分析测试结果。期间出错也不少，比如 Bug 回错地方让人误解这算是小事了，把巨大的二进制包 checkin 到 CVS 仓库里面（从美国那边同步一次得十几分钟）也算是小事了。有一次是让我分析自动化测试结果，结果马马虎虎没仔细看，就认为内核通过测试了，结果内核发布给客户之后被发现了问题，回过头来一看就是我当时马虎漏掉的那段，于是被老板叫过去促膝长谈了。这也是我当时跟客户关系最接近的一次，囧- -|||。还有一次是测试一个网络有关的 Bug，结果我在远程机器上做的测试，洪水般的数据包把整个公司在所有办公室的测试环境都搞挂了……所幸的是类似的问题后来从来没犯过。</p>




<p>而真正理解软件测试的过程是在半年后了，那时候老板让我尝试编写一个测试项目的测试计划，当然后来因为过年回家，没做成，美国的同事接过去做了。不过慢慢开始知道测试计划、测试用例和测试脚本之间的关系了。我们整个组看起来也是一个刚形成规范的组，现在组里在用的一些测试计划都是从那时候开始遵循<a href="http://wilma.vub.ac.be/~se1_0607/svn/bin/cgi/viewvc.cgi/documents/standards/IEEE/IEEE-STD-829-1998.pdf" target="_blank">IEEE829</a>写的。同时组里开始招人，依据内核子系统功能划分测试任务。恰好同时隔壁组的新版测试用例管理系统(上游版本<a href="https://fedoraproject.org/wiki/Nitrate" target="_blank">在此</a>)上线了，每个测试项目的成员把一些具体的测试用例都写到那上面，确实看起来更规范也更清晰了一些。</p>




<p>2010 年上半年准备毕业设计，老板又给了我另外一个开源社区的测试套件<a href="http://crackerjack.sourceforge.net/" target="_blank">Crackerjack</a>来移植，作为我毕设的内容。最后移植是成功了，只是那个开源社区几乎都没人参与了，后来我向管理员要了个 commit 权限，不过因为项目活跃度太低，而且里面很多代码都已经移植到了 LTP 中，也就抛下了。</p>




<p><p>10 年中旬结束学生身份，正式入职，我的工作重心继续在内核测试工具这一块，有之前一年的积累，我敢说我是全组对测试工具第二了解的人了。同时领到了新的任务，带实习生(美其名曰：Intern Tech Lead)，简而言之，就是实习生在测试时碰到问题就来找我，其中有很多问题肯定是跟测试工具相关的（吐槽：我还真是适合干这个活啊>.&lt;）。既然继续做测试工具，我又领到一些测试工具相关的活，这些工具大多是 Python 写的，于是我又被迫无师自通地学会了 Python。在此期间我深深感受到一件事情，碰到问题，看代码是最有效的 debug 方式。当然我不推荐碰到内核问题直接去看内核代码，那对不了解的人来说是一个黑洞，一陷进去就会浪费掉好久的时间。</p></p>

<p><p>10 年下半年有个重要事件，RHEL6 发布了，刚好在我生日前后。公司搞了个庆祝活动，其实也就把自助餐厅搬到了公司里面而已，可能后续还有抽奖什么的，我反正没参加=.= 老大让每个组的负责人都上去讲讲心得，我老板上去之后把组里每个人感谢了一遍，说到我的时候我才发现原来我是个打杂的……因为在 RHEL6 发布前，我把组里每个人的活，除了存储测试之外，都干了一遍。<a href="http://wangcong.org/blog/?p=1416" target="_blank">kdump</a>测试人手不足的时候，我上去顶了一个星期的班；<a href="http://dup.et.redhat.com/" target="_blank">DUP</a>需要交接工作的时候，我就作为过渡人员测试一段时间；<a href="https://fedorahosted.org/v7/" target="_blank">v7</a>没人测的时候，我就承担了测试任务……当时就觉得挺忙的，不过多打打杂，开阔开阔眼界，也是挺开心的事情。得感谢老板让我多方面了解内核测试的内容。</p></p>

<p><p>11 年初，老板开始突然向 LTP 提交了很多内存测试的代码，代码被上游接受后，他把内存管理的测试连同测试计划，测试用例都丢给了我，于是我的任务又增加了一个。不过终于有机会开始直接接触内核核心组件了，心里很兴奋。可惜老板留下的代码带着一身 BUG，我花了平均每个月 20 个补丁的代价才把它们修得差不多，而且现在还在继续修。</p></p>

<p><p>从去年校园招聘前后开始，我就参与了一系列面试。现在组里有几个人就是我当时面试定下来的。自己主要面试的是应聘实习或者校园招聘的学生，因为自己也刚从学生过来，所以比较能理解面试者的心态。学生面试的时候一般会关心测试职位有没有技术含量，自己能不能学到东西。我总是喜欢拿自己在 Red Hat 之前一年的经历，特别是自己打杂的经历跟他们讲。我面试时也带着一些倾向性，那些偏 Geek 的，给开源社区做过贡献的，阅读过内核代码的，我就比较喜欢。不过根本一些的层次，我还是喜欢学习能力、理解能力、沟通能力强的。</p></p>

<p><p>有了之前一年半的测试经验积累，我对测试本身的流程也比较了解了，于是现在开始参加一些更偏向于组内的测试过程控制的事情。这才理解到，所谓 QA，不仅仅是写几个测试计划，验几个 bug 就完事的。测试周期开始前，要保证测试计划的完整；测试开始后，要定期保证测试进度；测试中发现新的 Bug，要根据严重程度及时跟进 DEV/PM 那边的状态……刚开始干这活，完全没有经验，所以一个测试周期快结束的时候，笔记本里就满是总结经验教训。而在项目进度接近尾声的时候，往往是加班的疯狂时期。我当时既承担内存测试任务，跟踪组内的测试进度，还负责了 v7 那个项目的测试管理。虽说后两项不用我自己一件一件去做，但是碰到人手交接什么的活时，经验不足的我为了保证进度，只有自己上阵了，因此加班是不可避免的。在 v7 发布进入尾声的时候，碰到了几个严重的 bug，于是我半夜跟美国那边的开发者同步跟踪进度。他一出修复版本，我就马上测试，甚至他来不及修复的时候，我就自己动手修了>.&lt; 最后总算是把产品发布出去了，也因此搞得身心俱疲。</p></p>

<p><p>然后就是最近的一两个月，一边带实习生，一边准备新项目的计划阶段。最近组里的同志们似乎又被测试工具相关的问题缠住了，于是相应的，我又有点事情要忙了，~o(>_&lt;)o~</p></p>

<p><p>付出的代价大，积累的经验教训多，收获就多，这东西跟玩仙剑是类似的。就算不给我涨工资，我也觉得这两年学到的东西很值得。当然是否值得是要看有没有建立在时常总结分析经验教训的基础上的。除此之外我觉得还有一些值得分享的东西：</p></p>

<p><p>0. 开有效率的会很有用。开会是相互沟通的重要方式，组会之前做好充分准备，尽量减少无用的讨论时间，可以提高效率。开一对一的会议对了解组员的进度和想法有很大帮助。碰到问题用邮件解释不清的时候，最好的解决方案之一就是和同事约个时间开个会。</p></p>

<p><p>1. 发散学习会让自己学到的东西更多。做项目不仅仅是做项目，通过项目来了解一些属于自己职责之外的东西，比如趁机会了解一些内核代码，这样会让自己进步更快。但是不能影响自己项目的进度。</p></p>

<p><p>2. As usual, to Be Filled&hellip; :D</p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[关于简历的杂碎]]></title>
    <link href="http://www.casparzhang.com/blog/2011/03/03/jibber-jabber-on-the-resumes/"/>
    <updated>2011-03-03T00:00:00+08:00</updated>
    <id>http://www.casparzhang.com/blog/2011/03/03/jibber-jabber-on-the-resumes</id>
    <content type="html"><![CDATA[<p>最近在帮组里招人，不过一直没有招到合适的（去年校园招聘时候招到过一个合适的，结果被隔壁<a href="http://twitter.com/#!/guaneryu" _target="new">@GMoto</a>组里给抢去了……泪了个奔的）。一直不停地在系统里刷简历，邮件列表里收简历，于是有些碎碎念就冒出来了。想到我不久以前也是简历那一头的角色，现在变成站在这一边的角色了，正好可以忆苦思甜，对比一下。丢在这里，大家凑合着看。</p>




<p>首先得先介绍一下我所在的公司的背景，因为不同公司对待简历有不同的风格。好多人都知道，我现在呆在 Red Hat，就是那个跟某快递公司重名的做 Linux 的公司。至少我们研发部门这边，不会因为简历没写称呼没写落款就不看，也不会因为简历排版混乱就丢在一旁，甚至发现提交的是个 Word 文档，或者联系邮箱留了个带 qq 号码的 qq 邮箱也会认真的去看——只不过第一印象和心理上已经有些想法而已。一般来说，我们喜欢排版简洁的正文简历和 pdf 简历，如果能提交个 odt 格式的也能感觉出投简历的人确实是用心的。另外不是为了装 X，我们要求中英文简历是因为，如果面试结果良好，通常把简历会转交给国外的同事看，决定是否进一步面试。</p>




<p>小结一下，不管简历样式有多糟糕，只要能打开，我们就会认真看。当然非常不幸地，这也是我觉得某些提交简历的同学是折翼的天使的原因。</p>




<p><!--more-->然后是简历的内容。有些简历——真是太折翼了！一看就知道是海投用的“一简历走天下”的那种。某种程度上智联招聘起了为虎作伥的作用，可恨的是我们还不得不用智联……这些简历，“求职目标”一栏把能想到的 IT 职位估计都填遍了，互联网，软件，硬件，开发，测试，通信，嵌入式神马的都写着；然后在项目经历里面大书特书 Oracle 数据库、JavaSE/JavaEE 框架、C#，更发指的是写着有很丰富的 Windows 下某过气的图形界面库编程经验；而掌握技能里面，要么就是只写会 Java，要么就是把听说过的所有语言，从 HTML 到.Net 都写上……我能体会作为一个学生投简历时广撒网捕大鱼的心理和写简历时生怕简历单薄的心情，但是最起码投简历之前也要对应聘职位做一些分析吧，对方是"Linux""内核""测试"职位，三个关键字，至少在简历里要提到一项相关的吧……</p>




<p>针对简历内容，我个人有一些建议，觉得不对的就直接忽略吧。首先是求职目标，对方招什么职位，求职目标一栏就改成什么职位，或者这个职位的大类，别太大，更别写得明显不对口。其次作为学生，项目经历可能不多，那么就在教育经历和掌握技能上稍微补充一些：教育经历一栏可以把跟应聘职位相关的课程列出来，或者把所有重要课程列出来，职位相关的课程加粗醒目表示。这样面试的时候一般都会根据上过的课程问一下相关的理论知识；另外掌握技能这一栏，就要对职位描述作更细致的审察，对方要求什么技能，就写什么技能，哪怕是职位描述上写着“对 XXX 技术有热情，有自主学习能力”，也可以在技能一栏写上对应的话（自学能力不也是一种技能么）。而项目经历一栏，就别填发过传单搭过 Windows 服务器的事情了，宁愿你写一些学校学院布置过的大作业和实训。如果有 Linux 实验和大作业，完全是可以写到项目经历里面的，只要你曾做过。另外每个项目最好能多写几句，一是强调自己个人在项目中的职责，二是技术要点，三可以是项目的难点和解决方案，四可以是自己负责的部分的结果。当然写每点都要有概括成一行文字的能力，长篇大论也是不讨喜的。再小结一下，简历内容一定要有针对性，让人看得出你是用心投这个职位的；技能、知识、经历都与职位要求相关最好，无关的不写或尽量一笔带过。</p>




<p>接下来是一些细节的问题，想到什么说什么。比如说错别字要避免，专业词汇不要拼错；中英文简历排版最好统一，内容保持对应；描述不要夸张，特别是对于技能掌握程度的描述，避免用“精通”一词，因为还有“熟悉”“掌握”“了解”等表示程度的词语；态度要诚恳，用心写的话看的人能看出其中的态度是否诚恳。<em>其他的暂时想不起来了，待补充。</em></p>




<p>最后是针对我个人，或者说我和我周围这群体的人觉得能加分的细节：简历中带一个技术博客或者开源项目的链接；简历后附带一段自己写的 C/Shell/Python/Perl 代码；用 LaTeX 写简历；有 RHCE 的证书。<em>其他的又想不起来了，待补充。</em></p>




<p>不知道订阅我博客的五六百人都是什么群体，居然能忍受我半年不更新博客……要是是学生居多，希望上面的闲言碎语有一些能对你有帮助。当然希望能给我投简历，如果你是一个 Linux 和开源软件的爱好者。过一段时间如果我面试面得郁闷了，可能会发一个关于面试的碎碎念。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[重新装回 Gentoo]]></title>
    <link href="http://www.casparzhang.com/blog/2010/07/02/back-to-gentoo-again/"/>
    <updated>2010-07-02T00:00:00+08:00</updated>
    <id>http://www.casparzhang.com/blog/2010/07/02/back-to-gentoo-again</id>
    <content type="html"><![CDATA[<p>最近到手 T410，先是折腾了几天把里面的正版 Win7 Pro 通过无损分区移到角落里，然后是装了个 RHEL6.0 用来做测试，最后重新开始折腾 Gentoo。</p>




<p>这次没有纠结于选择哪个桌面环境上，我一点也不嫌弃 GNOME 的臃肿，于是装了个 gnome-light。USE Flag 把以前用过的拿过来修改了一下，顺便提一句，在我不用 Gentoo 的这段时间听说 hal 被干掉了，所以我也追风把 hal 标记给去掉了。</p>




<p>启动的时候使用 grub2，本来打了 915resolution 补丁来使 grub 宽屏显示，但是打的补丁和 grub-1.98 似乎不是特别搭配，导致启动 grub 前后各有 5 秒停滞时间，加上 grub 启动过后仍然会有一个分辨率只有 640x480 的屏幕，我干脆就不用 915resolution 补丁了。使用 grub2，配上 ext4 分区，就可以不使用 initramfs 了，关键在两点，一是内核中 ACHI 选项要编译进内核，二是 kernel 行参数中不要使用 UUID。</p>




<p>说一下一些 Thinkpad 相关的配置：</p>




<p>一是声卡驱动。Thinkpad T410 的声卡应该是 CONEXANT 的，但是选择这个驱动后内核还是不认我的声卡。最后只好选择了通用驱动。</p>




<p>二是 hdaps，所谓的硬盘防震保护系统。portage 里面相关的三个包，一个是 hdaps 模块，一个是 GNOME 的 Applet，还有一个是 OpenGL 绘制的小程序，用来展示你的笔记本目前的水平状态。</p>




<p><!--more-->三是 Thinkpad 相关的快捷键。目前键盘上展示的快捷键基本上都能用，除了 Fn+F6 的“摄像头、耳机”、Fn+F8 的“触摸板、小红点切换”还有麦克风静音三个按钮不能工作。根据 Thinkwiki 的<a href="http://www.thinkwiki.org/wiki/How_to_get_special_keys_to_work" target="_blank">这里</a>说，Fn+F8 可以通过 thinkpad-acpi 或者 tps 使之工作，其他两个目前还没办法。不过我连 Fn+F8 都没搞定，只是自己写了个脚本，用来切换触摸板的开关（用小红点的时候肯定很讨厌触摸板开着）：</p>




<p><pre lang="bash">
#!/bin/bash</pre></p>




<p>status=`synclient -l | grep TouchpadOff | awk '{print $3}'`<br />
if [ $status -eq 0 ]<br />
then<br />
    synclient TouchpadOff=1<br />
    notify-send "Touchpad is disabled!"<br />
elif [ $status -eq 1 ]<br />
then<br />
    synclient TouchpadOff=0<br />
    notify-send "Touchpad is enabled"<br />
fi

把它保存为脚本，加上 x 权限，通过 GNOME 的键盘快捷键来控制，比如 Win+Space。</p>




<p>另外我给蓝牙设置了一个快捷键。笔记本上那个蓝色的 ThinkVantage 按钮没用到，就把它绑定了一个 ACPI 事件，设置为给蓝牙控制开关。事件代码如下：</p>




<p><pre lang="bash">
event=ibm/hotkey HKEY 00000080 00001018
action=/home/caspar/.local/bin/bluetooth.sh
</pre></p>




<p>上述代码保存为 ACPI 事件文件，如/etc/acpi/events/bluetooth。快捷键对应的 KEY CODE 可以到 Thinkwiki 上面去找，也可以看内核的:Documentation/laptop/thinkpad-acpi.txt 文档。至于用于控制的 bluetooth.sh 脚本，则如下(代码来源仍旧是 ThinkWiki，看<a href="http://www.thinkwiki.org/wiki/How_to_setup_Bluetooth" target="_blank">这里</a>)：</p>




<p><pre lang="bash">
#!/bin/bash

NAME="tpacpi_bluetooth_sw"

find_by_name() {
    NAME="$1"
    test -z "${NAME}" && return 1
    SYSFS_NAME=$(find -P /sys -name name -path "*/rfkill/*" -exec grep -l "${NAME}" \{\} + | head -n 1)
    if [[ ! -z "${SYSFS_NAME}" && -r "${SYSFS_NAME/%name/state}" ]]; then
        RESULT=${SYSFS_NAME%%/name}
        echo $RESULT
        return 0
    fi
    return 1
}

SYSFS="$(find_by_name "${NAME}")"

if [[ ! -z "${SYSFS}" && -r "${SYSFS}/state" ]]; then
    case "$(cat "${SYSFS}/state")" in
        0)
            echo 1 > "${SYSFS}/state"
            ;;
        1)
            echo 0 > "${SYSFS}/state"
            ;;
    esac
fi
</pre></p>




<p>重启 ACPI 服务就可以看到蓝牙可以被 ThinkVantage 按钮控制了。</p>




<p>目前还不能工作的设备有：指纹识别器，从 lshw 中看到似乎还有 HECI 控制器(Intel 似乎不想管这个咚咚了？）、温度检测设备(Thermal Subsystem)和一个 Ricoh 的外围设备。</p>




<p>最后向使用 Thinkpad 的同学严重推荐<a href="http://www.thinkwiki.org" target="_blank">ThinkWiki</a>。</p>




<p>P.S. 设置充电阈值：据说如果电池不怎么经常使用的话，充电不充满有利于延长电池寿命（Win7 下的配套软件是这么说的），所以可以设置一个充电阈值，把下面命令放到/etc/conf.d/local.start 去：</p>




<p><pre lang="bash">echo 95 > /sys/devices/platform/smapi/BAT0/stop_charge_thresh</pre></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[生活在信息膨胀的社会]]></title>
    <link href="http://www.casparzhang.com/blog/2010/04/07/how-to-organize-your-information/"/>
    <updated>2010-04-07T00:00:00+08:00</updated>
    <id>http://www.casparzhang.com/blog/2010/04/07/how-to-organize-your-information</id>
    <content type="html"><![CDATA[<p>现在上网的，没下列东东都不好意思说自己是混互联网的：</p>




<p><blockquote>
    <a href="http://www.casparzhang.com">个人博客</a>（BSP/独立的至少得有一个吧），<br/>
    <a href="http://twitter.com/casparant" target="_blank">twitter</a>（以及其他各种围脖们），<br />
    <a href="http://www.douban.com/people/casparant/" target="_blank">豆瓣</a>，<br />
    <a href="http://www.facebook.com/casparant" target="_blank">facebook</a>，<br />
    <a href="https://www.google.com/reader/shared/casparant" target="_blank">Google Reader</a>（或者其他 rss 订阅工具），<br />
    <a href="http://feeds.feedburner.com/casparant" target="_blank">feedburner</a>/<a href="http://feed.feedsky.com/casparant" target="_blank">feedsky</a>，<br />
    <a href="http://www.flickr.com/photos/ant-veil/" target="_blank">flickr 相册</a>(或者 picasaweb,或者国内的 oo 和 xx），<br />
    <a href="http://cn.last.fm/user/casparant" target="_blank">lastfm</a>, <br />
    youtube 订阅，<br />
    friendfeed, <br />
    ……
</blockquote></p>




<p>在这个信息膨胀的社会，如何获取信息是个头疼的问题。下面列一下自己是如何把这些信息来源整合起来的，以供参考：</p>




<p>整合所有信息的核心就是 feed/rss，所以首先要把博客搞一个托管，或者干脆直接用自带的 feed（前者的好处是，换了博客可以不用通知别人修改你的 rss 地址）。我主要采用 feedburner，在 wordpress 里用了<a href="http://vonye.com/projects/feedred">feedred</a>这个插件，把自带的 feed 重定向到了 feedburner 上。因为很久很久以前 feedburner 被墙了，所以 feedsky 也用过。</p>




<p>然后就是 Twitter，作为一个重度 Twitter 患者，巴不得把自己博客更新、Google Reader 分享、豆瓣新鲜事、新拍的照片等一堆东西同步到 Twitter 上。这里有两种解决方案：</p>




<p>1. 使用<a href="http://twitterfeed.com">TwitterFeed.com</a></p>




<p>2. 使用 FeedBurner。</p>




<p>前者自己摸索就好了，我更推荐后者，因为自己有种感觉 FeedBurner 同步速度很快，莫非它采用了每分钟轮询的策略？Orz……在 FeedBurner 管理界面的"Publicize"中有个"Socialize"，里面可以设置把当前 feed 同步到 Twitter 上。</p>




<p><!--more-->因此只要你的信息源有 feed，就可以同步到 Twitter 上。</p>




<p>接下来是 facebook、校内这类社交网站，把 twitter 同步到 facebook/校内上。</p>




<p>校内的话，狗狗<a href="http://yegle.net/2009/04/21/use-bash-to-update-xiaonei-status-and-blog/" target="_blank">写过一个脚本</a>，请自行取用。facebook 的话，也有两种方式：</p>




<p>1. 使用 friendfeed（已被 facebook 收购鸟），</p>




<p>2.使用 facebook app</p>




<p><p>后者据<a href="http://twitter.com/luopf" target="_blank">lpf</a>同学反映，密码老是不对。我自己是很早很早以前设置的，忘了。建议有问题的同学使用第一种方案。friendfeed 因为被 facebook 收购了，也就更好地集成在了 facebook 中（不好意思我忘了怎么集成了，自己摸索一下吧>_&lt;）。需要注意的是 friendfeed 除了可以从 twitter 同步，还可以从其他源同步，这些源可能会和你之前设定的 Twitter 集成重复。</p></p>

<p><p>其他的，比如同步到<a href="http://www.williamlong.info/archives/1962.html" target="_blank">新浪围脖</a>，请自行查阅。</p></p>

<p><p>还有什么需要补充，欢迎留言。</p></p>
]]></content>
  </entry>
  
</feed>
