<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Programming | Ant-Veil]]></title>
  <link href="http://casparant.github.io/blog/categories/programming/atom.xml" rel="self"/>
  <link href="http://casparant.github.io/"/>
  <updated>2015-05-21T11:59:03+08:00</updated>
  <id>http://casparant.github.io/</id>
  <author>
    <name><![CDATA[Caspar]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Resolved: 如何更新git补丁]]></title>
    <link href="http://casparant.github.io/blog/2012/01/03/how-to-update-your-git-patches/"/>
    <updated>2012-01-03T00:00:00+08:00</updated>
    <id>http://casparant.github.io/blog/2012/01/03/how-to-update-your-git-patches</id>
    <content type="html"><![CDATA[<p>使用git制作补丁时，经常发现补丁需要修改。如果只是最后一次commit需要修改，那就好办，用下面的方法就可以搞定：
<pre lang="bash">
$ git reset HEAD^
# edit edit edit
$ git commit -a -s -c ORIG_HEAD
$ git format-patch --subject-prefix="PATCH v2"
</pre></p>




<p>但是如果是一系列补丁中的中间几个补丁需要修改，该怎么办呢？</p>




<p><p><del datetime="2012-01-03T16:12:57+00:00">笨办法已经被删掉>.&lt;</del></p></p>

<p><p><!--more--><strong>Update 1:</strong> 非常感谢wangcong的指点！"<code>git rebase -i</code>&ldquo;可以出色地完成这个任务，方法在man-page里面有详述，见"INTERACTIVE MODE"和"SPLITTING COMMITS"部分。</p></p>

<p><p>假设当前所在分支名为"topic"，做了3个补丁，打算提交给邮件列表的时候发现中间一个补丁需要更新，此时使用下列命令：</p></p>

<p><p><pre lang="bash">
git rebase -i master
</pre></p></p>

<p><p>出现编辑窗口如下：
<blockquote>
pick 21732a8 mm/swapping01: new testcase<br />
pick c3751d1 hugemmap01: clean-up format<br />
pick d75449c mm/swapping01: change sleep time to 5 sec
</blockquote></p></p>

<p><p>此时需要修改commit c3751d1，则把<code>pick</code>改为<code>edit</code>即可。保存退出后git会rebase到需要修改的commit处停止，此时可以直接修改内容，然后执行：
<pre lang="bash">
git add xxx # mark as resolved
git commit &ndash;amend
</pre></p></p>

<p><p>或者
<pre lang="bash">
git reset &ndash;soft HEAD^</p>

<h1>edit edit edit</h1>

<p>git commit -a -s -c ORIG_HEAD
</pre></p></p>

<p><p>之后执行"<code>git rebase &ndash;continue</code>&ldquo;即可。</p></p>

<p><p>突然想起来一年前就请教过wangcong这个问题，只不过当时对<code>git rebase</code>完全不了解，后来就忘了，惭愧-_-|||。</p></p>

<p><p><strong>Update 2</strong>: 同样感谢Iven的指点，可以去看看他的文章：<a href="http://www.kissuki.com/?p=135" target="_blank"><a href="http://www.kissuki.com/?p=135">http://www.kissuki.com/?p=135</a></a></p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ya-bupt-thesis-bachelor-1.0-Alpha-1 Released]]></title>
    <link href="http://casparant.github.io/blog/2010/05/16/ya-bupt-thesis-bachelor-1-0-alpha-1-released/"/>
    <updated>2010-05-16T00:00:00+08:00</updated>
    <id>http://casparant.github.io/blog/2010/05/16/ya-bupt-thesis-bachelor-1-0-alpha-1-released</id>
    <content type="html"><![CDATA[<p>这个东西总算是做了一大半了。因为拖了两个星期，论文还没开始写，接下来只能一边写论文一边改模板了。</p>




<p>简要介绍一下这个模板。</p>




<p>缘起是@yegle曾经推荐过他的同学梵高(cnMuggle)的一个<a href="http://code.google.com/p/buptthesis-bachelor/" target="_blank">北邮本科毕业论文模板</a>，我看了一下觉得不太符合我的需求，最主要是他用了CTeX，这玩意儿在我的机子上水土不服。作为一个Linux+XeTeX+xeCJK党，我就自己动手开始写。</p>




<p>期间参考了梵高同学的模板，当然也参考了<a href="http://wangxu.me" target="_blank">@gnawux(apt)</a>同学<a href="http://code.google.com/p/latex-bupt/" target="_blank">的</a>，还有DazzleZhang在apt的基础上改进<a href="http://code.google.com/p/buptthesis/" target="blank">的</a>，还有老牌的<a href="http://sourceforge.net/projects/thuthesis/" target="_blank">ThuThesis</a>。当然最主要还是依靠Google和CTeX论坛，把一些稀奇古怪的问题给解决了。</p>




<p>今天又解决了几个大问题，同时也把插入图片、插入表格、插入公式的格式整理了一下，所以就发布Alpha-1版本了。地址在<a href="http://code.google.com/p/yet-another-bupt-thesis-bachelor/" target="_blank">Google Code</a>上。接下来要完成的主要工作就是参考文献的排版。我一看其他模板的bst文件，几千行的代码，吓坏了。下次再搞好了。</p>




<p>欢迎提Bug~</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[当系统调用不存在……]]></title>
    <link href="http://casparant.github.io/blog/2010/04/07/when-the-system-call-does-not-exist/"/>
    <updated>2010-04-07T00:00:00+08:00</updated>
    <id>http://casparant.github.io/blog/2010/04/07/when-the-system-call-does-not-exist</id>
    <content type="html"><![CDATA[<p>最近在一个项目上卡了几天，整理出来主要碰到的问题，以备自己查阅。</p>




<p>具体的问题抽象出来就是这么一种情况：</p>




<p>有一堆分层的目录，里面全是系统调用的相关测试代码+Makefile，结构大致如下：</p>




<p><blockquote>
├── wait4<br />
│   ├── Makefile<br />
│   ├── wait401.c<br />
│   └── wait402.c<br />
├── waitid<br />
│   ├── waitid01<br />
│   │   ├── Makefile<br />
│   │   └── waitid01.c<br />
│   ├── waitid02<br />
│   │   ├── Makefile<br />
│   │   └── waitid02.c<br />
├── waitpid<br />
│   │   ├── Makefile<br />
│   │   └── waitpid_err_test.c<br />
.....</blockquote></p>




<p><!--more-->现在要把这堆系统调用的测试代码移植到各硬件平台和各发行版上，因此要考虑内核版本、glibc版本等等问题。比如说getcpu这个东东只在2.6.19及以后版本中存在并且只有x86_64 and i386架构才可用。而编译这堆系统调用使用的Makefile大致如下：</p>




<p><pre lang="bash" line="1">
MAKEFILES_FOR_TESTCASES = $(shell find testcases -name Makefile)
TESTCASES_BY_MAKE = $(addsuffix /test,$(dir $(MAKEFILES_FOR_TESTCASES)))</pre></p>




<p>$(TESTCASES_BY_MAKE):<br />
        $(MAKE) -C $(dir $@) test
</p>




<p>因此可能的解决方案有如下几种：</p>




<p><h4>1. 修改Makefile，禁止编译会出错的测试用例</h4></p>




<p><pre lang="bash" line="1">
FILTER_OUT_CASES = testcase1 testcase2 testcase3
ALL_MAKEFILES = $(shell find testcases -name Makefile)
FILTER_OUT_MAKEFILES = $(wildcard $(foreach filename,$(FILTER_OUT_CASES),testcases/$(filename)/Makefile))
MAKEFILES_FOR_TESTCASES = $(filter-out $(FILTER_OUT_MAKEFILES),$(ALL_MAKEFILES))
TESTCASES_BY_MAKE = $(addsuffix /test,$(dir $(MAKEFILES_FOR_TESTCASES)))</pre></p>




<p>$(TESTCASES_BY_MAKE):<br />
        $(MAKE) -C $(dir $@) test
</p>




<p>代码很平淡无奇，之所以贴出这段代码是为了温习一下Makefile中wildcard,filter-out和foreach的用法 :-)</p>




<p><h4>2.修改c代码，使用预处理判断是否存在</h4></p>




<p>这种办法在<a href="ltp.sf.net/" target="_blank">ltp</a>上应用十分广泛，ltp中自动从configure文件中生成include/config.h，生成的config.h包含了一系列预处理，例如：</p>




<p><pre lang="cpp" line="1">
/* Define to 1 if you have the <sys/signalfd.h> header file. */
#undef HAVE_SYS_SIGNALFD_H</pre></p>




<p>/* Define to 1 if you have the <sys/stat.h> header file. */<br />
#define HAVE_SYS_STAT_H 1
</p>




<p>当内核版本不同导致系统调用不存在时，可以设置undef预处理；如果系统调用存在，则define一下。</p>




<p>接下去可以修改源代码，在可能会在不同内核版本上出现分歧的代码前后加上：</p>




<p><pre lang="cpp" line="1">#ifdef HAVE_SYS_SIGNALFD_H
...
#else
int main()
{
  printf("syscall not exists in this platform\");
  return 1;
}
#endif</pre></p>




<p>同时ltp还在C代码中判断内核版本，内核版本在<sys/utsname.h>中有声明。</p>




<p>如果不使用configure文件，可以自己写一个shell脚本来生成，例如：</p>




<p><pre lang="bash" line="1">
#!/bin/sh</pre></p>




<p>CONFIG_PATH=./include/config.h<br />
KVER=`uname -r | cut -d'-' -f 1`<br />
KMAJVER=`echo $KVER | cut -d'.' -f 1-2`<br />
KMINVER=`echo $KVER | cut -d'.' -f 3`</p>




<p>if [ "$KMAJVER" = "2.6" ] && [ $KMINVER -ge 19 ];<br />
then<br />
    echo '#define HAVE_SYS_EPOLL_H 1' >> $CONFIG_PATH<br />
else<br />
    echo '#ifdef HAVE_SYS_EPOLL_H' >> $CONFIG_PATH<br />
    echo '#  undef HAVE_SYS_EPOLL_H' >> $CONFIG_PATH<br />
    echo '#endif' >> $CONFIG_PATH<br />
fi

</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[搞定LaTeX Beamer模板]]></title>
    <link href="http://casparant.github.io/blog/2010/04/03/know-how-to-make-a-latex-beamer-template/"/>
    <updated>2010-04-03T00:00:00+08:00</updated>
    <id>http://casparant.github.io/blog/2010/04/03/know-how-to-make-a-latex-beamer-template</id>
    <content type="html"><![CDATA[<p>过一段时间公司和学校都得做presentation，所以现在就得好好开始准备slides。以前我就用Beamer做过一次slide，而且是匆匆忙忙用了默认模板搞定的。这次借着再做slides的机会，我得自己搞个模板。</p>




<p>需求如下，非常简单：</p>




<p><blockquote>1. 要在合适的位置打上Logo（一般是左上角或者右上角）;<br />
2. 要能自定义页脚<br />
3. 首页要有背景</blockquote></p>




<p>经过半个白天加一个晚上的折腾，基本上解决了上述问题：</p>




<p>要打Logo，并且自定义位置，可以使用如下语句：</p>




<p><pre lang="latex"> \logo{\pgfputat{\pgfxy(#1,#2)}{\pgfbox[center,base]{\includegraphics[height=0.5cm]{#3}}}}</pre></p>




<p>事先要包含pgf宏包，#1,#2是Logo坐标，#3是Logo路径。关于坐标，我发现用pdflatex编译和用xelatex编译时坐标表示的实际位置是不同的，反正自己手工慢慢调就是了。也可以把上述代码加个\newcommand，做成一个带参数的命令直接调用。</p>




<p>自定义页脚，我参考了beamer guide和beamer里面的某个宏包的写法：</p>




<p><!--more--><pre lang="latex">
%% Custom footer
\usefoottemplate{
    \hbox{\tinycolouredline{structure}{
    \begin{beamercolorbox}[wd=0.22\paperwidth,ht=2.4ex,dp=1.2ex,left]{author in head/foot}%
        \usebeamerfont{author in head/foot}\insertshortauthor
    \end{beamercolorbox}%
    \begin{beamercolorbox}[wd=0.5\paperwidth,ht=2.4ex,dp=1.2ex,center]{title in head/foot}%
        \usebeamerfont{title in head/foot}\insertshorttitle
    \end{beamercolorbox}%
    \begin{beamercolorbox}[wd=0.28\paperwidth,ht=2.4ex,dp=1.2ex,right]{date in head/foot}%
        \usebeamerfont{date in head/foot}\insertshortdate{}\hspace*{0.8em}
        \insertframenumber{} / \inserttotalframenumber\hspace*{4.5ex}
    \end{beamercolorbox}}}%
}
</pre></p>




<p>需要说明的是，我始终搞不懂\tinycolouredline的第一个参数structure还能用什么代替，而且上述方案有个及其大的BUG，在页脚最左边的那列的左边有1em的空白，如果要给这列填充了和那个空白区与不一样的背景色，就会很难看。我也没找到消除那列空白的代码。</p>




<p>首页加背景就太简单了，我直接用wallpaper宏包，然后在第一页加入：</p>




<p><pre lang="latex">\ThisCenterWallPaper{1}{inc/cover}</pre></p>




<p>不管是加Logo也好，加墙纸也好，它们都很容易被colortheme中定义的背景色覆盖，这可以通过\setbeamercolor来去掉背景色，基本语法如下：</p>




<p><pre lang="latex">\setbeamercolor{background canvas}{bg=}
\setbeamercolor{title}{fg=black, bg=lightgray!80!white}</pre></p>




<p>最后放出模板，<a href="https://docs.google.com/leaf?id=0B-GDvj9JsmanZjUzZDI4M2MtYzE3MS00YTNjLWEyZjUtYjFhMzY5MzY5NWVi&hl=zh_CN">点此下载>>>></a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LaTeX Resume Templates]]></title>
    <link href="http://casparant.github.io/blog/2009/04/23/latex-resume-templates/"/>
    <updated>2009-04-23T00:00:00+08:00</updated>
    <id>http://casparant.github.io/blog/2009/04/23/latex-resume-templates</id>
    <content type="html"><![CDATA[<p>用LaTeX上瘾之后，什么东西都想用LaTeX来做。前段时间由于经验不足，折腾LaTeX版的实验报告模板未果，这次在写LaTeX简历之前，足足做好了功课，最后总算是做出来了，感觉很棒。</p>




<p>推荐几个LaTeX模板，一个是以前找到的，不过我最后没采用。<a href="http://docs.google.com/leaf?id=0B-GDvj9JsmanYmVlOWE1NDAtY2RmOS00MTkyLWE4YTItYWU2N2I0NmVlZDdj&hl=zh_CN">点此下载>>></a></p>




<p>另外一个是在这里找到的：<a href="http://www.davidgrant.ca/latex_resume_template">http://www.davidgrant.ca/latex_resume_template</a>，作者使用了shading宏包，但是我用了XeTeX包后shading包似乎就不起作用了，后来在作者文章后面发现一个留言，似乎是个变通的办法，但是shading是有了，边框却没了。最后去smth上的TeX版求助，可爱的版主大人瞬间就回帖告诉我，用\fcolorbox等比较常见的包中的命令就能搞定，于是我就搞定了。经过我修改后的LaTeX模板，我只贴一个文件\begin{document}前面的那部分吧，因为简历的内容真的是不好意思拿出手-。-和我下载的那个网页的主人比起来，真是汗颜啊~~</p>




<p>这部分改动还是挺多的，特别是修改了几个命令，请注意自己替换，并且请使用xelatex命令编译。</p>




<p><!--more-->———————————— 分割线 ————————————</p>




<p><pre lang="latex" line="1">
% resume.tex
%
% (c) 2002 Matthew Boedicker <mboedick(AT)mboedick(DOT)org> (original author) http://mboedick.org
% (c) 2003-2007 David J. Grant <davidgrant-at-gmail.com> http://www.davidgrant.ca
% (c) 2009 Caspar Zhang <casparant(AT)gmail(DOT)com> http://www.casparant.com
%
% This work is licensed under the Creative Commons Attribution-Noncommercial-Share Alike 2.5 License.
% To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/2.5/ or send a
% letter to Creative Commons, 543 Howard Street, 5th Floor, San Francisco, California, 94105, USA.</davidgrant-at-gmail.com></pre></p>




<p>% Commented by Caspar Zhang: This tex file should be compiled under XeTeX environment if you use CJK.<br />
% $ xelatex resume.tex</p>




<p>\documentclass[a4paper,11pt]{article}</p>




<p>%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Margins %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%<br />
% usage : \setmargin{top}{bottom}{left}{right}<br />
\newcommand{\setmargin}[4]<br />
{
    \setlength{\headheight}{13.6pt}</p>




<p>    \setlength{\topmargin}{#1}<br />
    \addtolength{\topmargin}{-1in}<br />
    \setlength{\voffset}{0mm}<br />
    \setlength{\textheight}{\paperheight}<br />
    \addtolength{\textheight}{-\headheight}<br />
    \addtolength{\textheight}{-\headsep}<br />
    \addtolength{\textheight}{-\footskip}<br />
    \addtolength{\textheight}{-#1}<br />
    \addtolength{\textheight}{-#2}</p>




<p>    \setlength{\oddsidemargin}{#3}<br />
    \addtolength{\oddsidemargin}{-1in}<br />
    \setlength{\evensidemargin}{\oddsidemargin}<br />
    \setlength{\hoffset}{0mm}<br />
    \setlength{\textwidth}{\paperwidth}<br />
    \addtolength{\textwidth}{-#3}<br />
    \addtolength{\textwidth}{-#4}<br />
}</p>




<p>\setmargin{0cm}{0cm}{1in}{1in}</p>




<p>%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Page and Fonts %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%<br />
\pagestyle{empty}           % no headings<br />
\raggedbottom               %<br />
\raggedright                %<br />
\setlength{\tabcolsep}{0in} %<br />
\usepackage[BoldFont, SlantFont]{xeCJK} % xeCJK package<br />
\CJKlanguage{zh-cn}                     % set language<br />
\setmainfont{Times New Roman}           % main font<br />
\setCJKmainfont{SimSun}                 % cjk main font<br />
\setCJKfamilyfont{song}{SimSun}         % cjk family font<br />
\usepackage[svgnames]{xcolor}           % xcolor package<br />
\definecolor{shadecolor}{gray}{0.90}    % Background color of section bars</p>




<p>%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Custom Commands %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%<br />
% Usage : ressection{section item}<br />
\newcommand{\ressection}[1]<br />
{\fcolorbox{black}{shadecolor}{\vbox{\hsize 0.98\textwidth \textbf{\mbox{~}{\large #1} \vphantom{p\^{E}}}}}}</p>




<p>% Usage : ressubsection{item1}{comment1}{item2}{comment2}<br />
\newcommand{\ressubsection}[4]<br />
{
\begin{tabular*}{0.9\textwidth}{l@{\extracolsep\fill}r}<br />
    \textbf{#1} & #2 \\<br />
    \textit{#3} & \textit{#4} \\<br />
\end{tabular*}\vspace{-6pt}<br />
}</p>




<p>% Usage : resrowitemlr{item}{comment}<br />
\newcommand{\resrowitemlr}[2]<br />
{
\begin{tabular*}{0.9\textwidth}{l@{\extracolsep\fill}r}<br />
    \textbf{#1} & #2 \\<br />
\end{tabular*}<br />
}</p>




<p>% Usage : resitem{item}<br />
\newcommand{\resitem}[1]<br />
{\item #1 \vspace{-2pt}}</p>




<p>
</p>

]]></content>
  </entry>
  
</feed>
